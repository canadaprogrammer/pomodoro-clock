{"version":3,"sources":["images/iconplaypause1.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","break","session","time","interval","on","isPlay","warn","color","startTimer","bind","assertThisInitialized","breakDec","breakInc","sessionDec","sessionInc","reset","display","setState","status","console","log","_this2","clearInterval","setInterval","changeStatus","audioBeep","pause","currentTime","mm","Math","floor","ss","format","t","slice","play","_this3","iconStyle","margin","fontSize","react_default","a","createElement","className","id","onClick","index_es","icon","faArrowDown","style","faArrowUp","charAt","toUpperCase","src","iconPP","alt","faSync","rel","href","target","ref","audio","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71f900ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iconplaypause1.b00a7e78.png\";","import React from 'react';\r\nimport './App.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowDown, faArrowUp, faSync } from '@fortawesome/free-solid-svg-icons';\r\n// import Moment from 'react-moment';\r\nimport iconPP from './images/iconplaypause1.png';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      break: 5,\r\n      session: 25,\r\n      time: 25 * 60,\r\n      interval: '',\r\n      on: 'session',\r\n      isPlay: false,\r\n      warn: {color: \"hsl(160, 100%, 40%)\"}\r\n    }\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.breakDec = this.breakDec.bind(this);\r\n    this.breakInc = this.breakInc.bind(this);\r\n    this.sessionDec = this.sessionDec.bind(this);\r\n    this.sessionInc = this.sessionInc.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.display = this.display.bind(this);\r\n  }\r\n  breakDec() {\r\n    if (this.state.isPlay) return;\r\n    if (this.state.break !== 1) {\r\n      this.setState({\r\n        break: this.state.break - 1\r\n      });\r\n      if (this.state.on === 'break') {\r\n        this.setState({\r\n          time: (this.state.break - 1) * 60\r\n        });\r\n      }\r\n    }\r\n  }\r\n  breakInc() {\r\n    if (this.state.isPlay) return;\r\n    if (this.state.break !== 60) {\r\n      this.setState({\r\n        break: this.state.break + 1\r\n      });\r\n      if (this.state.on === 'break') {\r\n        this.setState({\r\n          time: (this.state.break + 1) * 60\r\n        });\r\n      }\r\n    }\r\n  }\r\n  sessionDec() {\r\n    if (this.state.isPlay) return;\r\n    if (this.state.session !== 1) {\r\n      this.setState({\r\n        session: this.state.session - 1\r\n      });\r\n      if (this.state.on === 'session') {\r\n        this.setState({\r\n          time: (this.state.session - 1) * 60\r\n        });\r\n      }\r\n    }\r\n  }\r\n  sessionInc() {\r\n    if (this.state.isPlay) return;\r\n    if (this.state.session !== 60) {\r\n      this.setState({\r\n        session: this.state.session + 1\r\n      });\r\n      if (this.state.on === 'session') {\r\n        this.setState({\r\n          time: (this.state.session + 1) * 60\r\n        });\r\n      }\r\n    }\r\n  }\r\n  changeStatus() {\r\n    let status = this.state.on === 'session' ? 'break' : 'session';\r\n    console.log('status: ' + status);\r\n    this.setState({\r\n      on: status,\r\n      time: this.state[status] * 60,\r\n      warn: {color: \"hsl(160, 100%, 40%)\"}\r\n    });\r\n  }\r\n  startTimer() {\r\n    console.log('on: ' + this.state.on);\r\n    // need to move it to btn control\r\n    this.setState({\r\n      isPlay: !this.state.isPlay\r\n    });\r\n\r\n    if (!this.state.isPlay) {\r\n      // set interval\r\n      this.setState({\r\n        interval: setInterval( () => {\r\n          // check time is greater than 0\r\n          // // if greater, keep going\r\n          // // if less, change status\r\n          if (this.state.time === 60) {\r\n            this.setState({\r\n              warn: {color: \"hsl(0, 100%, 40%)\"}\r\n            });\r\n          }\r\n          if (this.state.time === 0) {\r\n            this.changeStatus();\r\n          } else {\r\n            this.setState({\r\n              time: this.state.time - 1\r\n            });\r\n          }\r\n          console.log(this.state.time);\r\n        }, 1000)\r\n      })\r\n    } else {\r\n      // clear interval\r\n      this.setState({\r\n        interval: clearInterval(this.state.interval)\r\n      });\r\n    }\r\n  }\r\n  reset() {\r\n    this.setState({\r\n      break: 5,\r\n      session: 25,\r\n      time: 25 * 60,\r\n      interval: clearInterval(this.state.interval),\r\n      on: 'session',\r\n      isPlay: false,\r\n      warn: {color: \"hsl(160, 100%, 40%)\"}\r\n    });\r\n    this.audioBeep.pause();\r\n    this.audioBeep.currentTime = 0;\r\n\r\n  }\r\n  display() {\r\n    let mm = Math.floor(this.state.time / 60);\r\n    let ss = this.state.time - (mm * 60);\r\n    const format = t => {\r\n      return ('0' + t).slice(-2);\r\n    }\r\n    return format(mm) + ':' + format(ss);\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.time === 0 ) {\r\n      this.audioBeep.play();\r\n    }\r\n  }\r\n  render() {\r\n    const iconStyle = {\r\n      margin: \"0 0.5rem\",\r\n      fontSize: \"1rem\"\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"App\">\r\n          <header>\r\n            <h1>Pomodoro Clock</h1>\r\n          </header>\r\n          <main>\r\n            <div className=\"length-wrap\">\r\n              <div className=\"length\">\r\n                <div id=\"break-label\">Break Length</div>\r\n                <button id=\"break-decrement\" onClick={this.breakDec}><FontAwesomeIcon icon={faArrowDown} style={iconStyle}/></button>\r\n                <div id=\"break-length\">{this.state.break}</div>\r\n                <button id=\"break-increment\" onClick={this.breakInc}><FontAwesomeIcon icon={faArrowUp} style={iconStyle}/></button>\r\n              </div>\r\n              <div className=\"length\">\r\n                <div id=\"session-label\">Session Length</div>\r\n                <button id=\"session-decrement\" onClick={this.sessionDec}><FontAwesomeIcon icon={faArrowDown} style={iconStyle}/></button>\r\n                <div id=\"session-length\">{this.state.session}</div>\r\n                <button id=\"session-increment\" onClick={this.sessionInc}><FontAwesomeIcon icon={faArrowUp} style={iconStyle}/></button>\r\n              </div>\r\n            </div>\r\n            <div className=\"timer-wrap\" style={this.state.warn}>\r\n              <div id=\"timer-label\">{this.state.on.charAt(0).toUpperCase() + this.state.on.slice(1)}</div>\r\n              <div id=\"time-left\">{this.display()}</div>\r\n            </div>\r\n            <div className=\"buttons\">\r\n              <button id=\"start_stop\" onClick={this.startTimer}><img src={iconPP} alt=\"play and pause button\"/></button>\r\n              <button id=\"reset\" onClick={this.reset}><FontAwesomeIcon icon={faSync} style={iconStyle}/></button>\r\n            </div>\r\n          </main>\r\n          <footer>\r\n            <p>Designed and Coded by <a rel=\"noopener noreferrer\" href=\"https://developerjinpark.github.io/\" target=\"_blank\">Jin Park</a></p>\r\n          </footer>\r\n          <audio id=\"beep\" ref={(audio) => {this.audioBeep = audio;}} src=\"https://goo.gl/65cBl1\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}